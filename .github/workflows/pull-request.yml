name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]
  pull_request_target:
    branches: [main, develop]

env:
  NODE_VERSION: '24'

jobs:
  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Run ESLint
        run: yarn lint
        
      - name: Run TypeScript check
        run: yarn type-check
        
      - name: Check code formatting
        run: yarn format:check
        
      - name: Check for console.log statements
        run: |
          if grep -r "console.log" src/ --include="*.ts" --include="*.tsx"; then
            echo "❌ console.log statements found. Please remove them before merging."
            exit 1
          fi
          
      - name: Check for TODO comments
        run: |
          if grep -r "TODO" src/ --include="*.ts" --include="*.tsx"; then
            echo "⚠️ TODO comments found. Consider addressing them before merging."
          fi

  # Bundle Analysis
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Build application
        run: yarn build
        
      - name: Analyze bundle size
        run: |
          echo "📊 Bundle size analysis:"
          du -sh .next/static/chunks/ || echo ".next/static/chunks not found"
          if [ -d .next/static/css ]; then
            du -sh .next/static/css/
          else
            echo "No .next/static/css directory (Turbopack)"
          fi
          
      - name: Check bundle size limits
        run: |
          # Add your bundle size limits here
          echo "✅ Bundle size within acceptable limits"

  # Performance Testing
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Build application
        run: yarn build
        
      - name: Run Lighthouse CI
        run: |
          echo "🔍 Running performance analysis..."
          # Add Lighthouse CI commands here
          # yarn global add @lhci/cli
          # lhci autorun

  # Comment PR with results
  comment-pr:
    name: Comment PR
    runs-on: ubuntu-latest
    needs: [code-quality, bundle-analysis, performance]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Comment PR with results
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
            });
            
            const summary = checks.check_runs.map(check => 
              `- ${check.name}: ${check.conclusion === 'success' ? '✅' : '❌'} ${check.conclusion || 'pending'}`
            ).join('\n');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `## 🚀 PR Quality Check Results\n\n${summary}\n\n---\n*This comment was automatically generated by GitHub Actions*`
            });