name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: yarn test:e2e:install
      
    - name: Build application
      run: yarn build
      
    - name: Start application
      run: |
        yarn start &
        sleep 10
      env:
        PORT: 3001
        
    - name: Wait for application
      run: |
        npx wait-on http://localhost:3001 --timeout 30000
        
    - name: Run E2E tests
      run: yarn test:e2e --project=${{ matrix.browser }}
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3001
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  e2e-tests-mobile:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        device: [Mobile Chrome, Mobile Safari, iPad]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: yarn test:e2e:install
      
    - name: Build application
      run: yarn build
      
    - name: Start application
      run: |
        yarn start &
        sleep 10
      env:
        PORT: 3001
        
    - name: Wait for application
      run: |
        npx wait-on http://localhost:3001 --timeout 30000
        
    - name: Run E2E tests on mobile
      run: yarn test:e2e --project="${{ matrix.device }}"
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3001
        
    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-mobile-${{ matrix.device }}
        path: playwright-report/
        retention-days: 30

  e2e-tests-parallel:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: yarn test:e2e:install
      
    - name: Build application
      run: yarn build
      
    - name: Start application
      run: |
        yarn start &
        sleep 10
      env:
        PORT: 3001
        
    - name: Wait for application
      run: |
        npx wait-on http://localhost:3001 --timeout 30000
        
    - name: Run E2E tests in parallel
      run: yarn test:e2e --workers=4
      env:
        PLAYWRIGHT_BASE_URL: http://localhost:3001
        
    - name: Upload parallel test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-parallel
        path: playwright-report/
        retention-days: 30

  test-summary:
    needs: [e2e-tests, e2e-tests-mobile, e2e-tests-parallel]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results/
        
    - name: Generate test summary
      run: |
        echo "# E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check if any tests failed
        if [ -d "test-results" ]; then
          echo "✅ E2E tests completed successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ E2E tests failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- Test reports and videos are available in the artifacts section" >> $GITHUB_STEP_SUMMARY
        echo "- Check individual job logs for detailed test results" >> $GITHUB_STEP_SUMMARY
