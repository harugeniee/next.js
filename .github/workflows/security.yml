name: Security Checks

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '24'

jobs:
  # Dependency Vulnerability Scan
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Run yarn audit
        run: yarn audit --level moderate
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Code Security Analysis
  code-security:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Run Semgrep security scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
          
      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif

  # Dependency Update Check
  dependency-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Check for outdated packages
        run: yarn outdated
        
      - name: Check for security updates
        run: yarn audit --level high
        
      - name: Create issue for updates
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['dependencies', 'security']
            });
            
            const hasUpdateIssue = issues.some(issue => 
              issue.title.includes('Dependency Updates') || 
              issue.title.includes('Security Updates')
            );
            
            if (!hasUpdateIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ”’ Security & Dependency Updates Required',
                body: `## Security Alert\n\nDependencies require updates for security reasons.\n\nPlease run:\n\`\`\`bash\nyarn audit\n\`\`\`\n\n---\n*This issue was automatically created by GitHub Actions*`,
                labels: ['dependencies', 'security', 'automated']
              });
            }

  # Container Security (if using Docker)
  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for Dockerfile
        id: dockerfile-check
        run: |
          if [ -f "Dockerfile" ]; then
            echo "dockerfile-exists=true" >> $GITHUB_OUTPUT
          else
            echo "dockerfile-exists=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Run Trivy vulnerability scanner
        if: steps.dockerfile-check.outputs.dockerfile-exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'your-app:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy results
        if: steps.dockerfile-check.outputs.dockerfile-exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif