---
alwaysApply: true
---

# ⚙️ Cursor Scaffolding & Definition of Done

## Cursor Scaffolding

**When:** `Create page <slug>`
1. `src/app/<slug>/page.tsx` — RSC page
2. `src/components/features/<slug>/*`
3. `src/lib/api/<slug>.ts`
4. `src/hooks/use<Slug>.ts`
5. `src/i18n/locales/{en,vi}/<slug>.json`
6. `src/__tests__/<slug>.spec.tsx`

**When:** `Create form <name>`
- Path: `src/components/features/<domain>/<name>-form.tsx`
- Use RHF + Zod + shadcn `<Form />`
- Disabled/loading state + toast

**When:** `Create modal <name>`
- Use `Dialog`/`Sheet`
- Focus trap, ESC close, responsive sizing

> ❌ Never create `app/api/*` or `"use server"`.
> ✅ Always use `src/lib/http/client.ts`.

---

## ✅ Definition of Done

| Check | Status |
|-------|--------|
| No TS/ESLint warnings | ✅ |
| Theme dark/light + color variants works | ✅ |
| Mobile-first responsive | ✅ |
| No secrets/server actions | ✅ |
| shadcn primitives w/ states | ✅ |
| i18n EN+VI ready (9 namespaces) | ✅ |
| Accessible (focus, aria, nav) | ✅ |
| Tests ≥ 80% coverage | ✅ |
| HTTP interceptors configured | ✅ |
| Rate limit handling implemented | ✅ |
| Form validation with Zod | ✅ |
| Error boundaries and user feedback | ✅ |
| Custom hooks for reusable logic | ✅ |
| TypeScript interfaces defined | ✅ |
| Loading states implemented | ✅ |
| Toast notifications working | ✅ |
| Image optimization with Next.js | ✅ |
| Rich text editor functionality | ✅ |
| Authentication flows complete | ✅ |
| Middleware protection active | ✅ |
